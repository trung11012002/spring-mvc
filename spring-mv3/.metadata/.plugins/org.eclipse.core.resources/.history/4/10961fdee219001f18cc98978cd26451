package com.laptrinhjavaweb.controller.admin;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.laptrinhjavaweb.dto.UserDTO;
import com.laptrinhjavaweb.service.IUserService;

@Controller(value = "userControllerOfAdmin")
public class UserController {
	@Autowired
	private IUserService userService;
	@RequestMapping(value = "/quan-tri/nguoi-dung/danh-sach", method = RequestMethod.GET)
	public ModelAndView homePage(@RequestParam("page") int page, @RequestParam("limit") int limit,
			HttpServletRequest request) {
		ModelAndView mav = new ModelAndView("admin/user/list");
		UserDTO model = new UserDTO();
		model.setPage(page);
		model.setLimit(limit);
		Pageable pageable = new PageRequest(page - 1, limit);
		model.setListResult(userService.findAll(pageable));
		model.setTotalItem(userService.getTotalItem());
		model.setTotalPage((int) Math.ceil((float) model.getTotalItem() / model.getLimit()));
		mav.addObject("model", model);
		return mav;
	}
	@RequestMapping(value = "/quan-tri/nguoi-dung/them-moi", method = RequestMethod.GET)
	public ModelAndView addPage() {
		ModelAndView mav = new ModelAndView("admin/user/edit");
		UserDTO model = new UserDTO();
		mav.addObject("model", model);
		return mav;
	}
	@RequestMapping(value = "/quan-tri/nguoi-dung/them-moi", method = RequestMethod.POST)
	public ModelAndView creatPage(@ModelAttribute("model") UserDTO userDTO, 
			@RequestParam(value = "ADMIN",required = false) String admin,
			@RequestParam(value = "USER",required = false) String user) {
		
		ModelAndView mav = new ModelAndView("admin/user/edit");
		
		userDTO.setStatus(1);
		List<String> listRole = new ArrayList<>();
		if(admin != null) {
			listRole.add("ADMIN");
			mav.addObject("ADMIN", "ADMIN");
		}
		if(user != null) {
			listRole.add("USER");
			mav.addObject("USER", "USER");
		}
		userDTO.setRoles(listRole);
		UserDTO result = userService.persist(userDTO);

		
		//add message;
		if(result == null) {
			result = new UserDTO();
			mav.addObject("message", "Account already exists");
			mav.addObject("alert", "danger");
		}else {
			mav.addObject("message", "Success");
			mav.addObject("alert", "success");
		}
		mav.addObject("model", result);
		return mav;
	}
	
	@RequestMapping(value = "/quan-tri/nguoi-dung/xoa", method = RequestMethod.POST)
	public void deleteUsers(@RequestBody long[] ids) {
		userService.delete(ids);
//		return "redirect:/quan-tri/nguoi-dung/danh-sach";
	}
	@RequestMapping(value = "/quan-tri/nguoi-dung/chinh-sua", method = RequestMethod.GET)
	public ModelAndView editPage(@RequestParam("id") long id) {
		ModelAndView mav = new ModelAndView("admin/user/edit");
		UserDTO model = new UserDTO();
		mav.addObject("model", model);
		return mav;
	}
}
