package com.laptrinhjavaweb.controller.admin;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.laptrinhjavaweb.dto.CategoryDTO;
import com.laptrinhjavaweb.service.ICategoryService;
import com.laptrinhjavaweb.util.MessageUtil;

@Controller(value = "categoryControllerOfAdmin")
public class CategoryController {
	@Autowired
	private ICategoryService categoryService;
	@Autowired
	private MessageUtil messageUtil;
	@RequestMapping(value = "/quan-tri/loai/danh-sach", method = RequestMethod.GET)
	public ModelAndView homePage(@RequestParam("page") int page, @RequestParam("limit") int limit,
		HttpServletRequest request) {
		CategoryDTO model = new CategoryDTO();
		model.setPage(page);
		model.setLimit(limit);
		ModelAndView mav = new ModelAndView("admin/category/list");
		Pageable pageable = new PageRequest(page - 1, limit);
		model.setListResult(categoryService.findAllList(pageable));
		model.setTotalItem(categoryService.getTotalItem());
		model.setTotalPage((int) Math.ceil((float) model.getTotalItem() / model.getLimit()));
		mav.addObject("model", model);
		//message
		if (request.getParameter("message") != null) {
			Map<String,String> message = messageUtil.getMessage(request.getParameter("message"));
			mav.addObject("message", message.get("message"));
			mav.addObject("alert", message.get("alert"));
		}
		return mav;
	}
	@RequestMapping(value = "/quan-tri/loai/chinh-sua", method = RequestMethod.GET)
	public ModelAndView createPage(@RequestParam(value = "id", required = false) Long id, HttpServletRequest request) {
		ModelAndView mav = new ModelAndView("admin/category/edit");
		CategoryDTO model = new CategoryDTO();
		if (id != null) {
			model = categoryService.finById(id);
		}
		mav.addObject("model", model);	
		return mav;
	}
	@RequestMapping(value = "/quan-tri/loai/chinh-sua", method = RequestMethod.POST)
	public ModelAndView savePage(@ModelAttribute("model") CategoryDTO categoryDTO) {
		ModelAndView mav = new ModelAndView("admin/category/edit");
		CategoryDTO model = categoryService.save(categoryDTO);
		if(model != null) {
			mav.addObject("message" ,"success");
			mav.addObject("alert", "success");
		}else {
			mav.addObject("message" ,"error");
			mav.addObject("alert", "danger");
			model = new CategoryDTO();
		}
		mav.addObject("model", model);
		return mav;
	}
	@RequestMapping(value = "/quan-tri/loai/xoa", method = RequestMethod.POST)
	public void deleteUsers(@RequestBody long[] ids) {
		categoryService.delete(ids);
//		return "redirect:/quan-tri/nguoi-dung/danh-sach";
	}
}
